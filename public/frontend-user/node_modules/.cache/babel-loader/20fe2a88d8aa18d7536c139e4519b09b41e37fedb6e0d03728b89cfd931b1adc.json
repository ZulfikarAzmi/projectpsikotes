{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useState } from 'react';\nimport { FaCheck, FaClipboardList } from 'react-icons/fa6';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { copyToClipboard } from './helpers.mjs';\nconst ClipboardWithIcon = forwardRef(({\n  valueToCopy,\n  icon: Icon = FaClipboardList,\n  theme: customTheme = {},\n  className,\n  ...rest\n}, ref) => {\n  const [isJustCopied, setIsJustCopied] = useState(false);\n  const theme = mergeDeep(getTheme().clipboard.withIcon, customTheme);\n  return /* @__PURE__ */jsx(\"button\", {\n    className: twMerge(theme.base, className),\n    onClick: () => copyToClipboard(valueToCopy, setIsJustCopied),\n    ...rest,\n    ref,\n    children: isJustCopied ? /* @__PURE__ */jsx(FaCheck, {\n      \"aria-hidden\": true,\n      className: theme.icon.successIcon\n    }) : /* @__PURE__ */jsx(Icon, {\n      \"aria-hidden\": true,\n      className: theme.icon.defaultIcon\n    })\n  });\n});\nexport { ClipboardWithIcon };","map":{"version":3,"names":["ClipboardWithIcon","forwardRef","valueToCopy","icon","Icon","FaClipboardList","theme","customTheme","className","rest","ref","isJustCopied","setIsJustCopied","useState","mergeDeep","getTheme","clipboard","withIcon","jsx","twMerge","base","onClick","copyToClipboard","children","FaCheck","successIcon","defaultIcon"],"sources":["/Users/nayalabina/project-cbt/node_modules/flowbite-react/src/components/Clipboard/ClipboardWithIcon.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, useState, type ComponentProps, type FC } from \"react\";\nimport { FaCheck, FaClipboardList } from \"react-icons/fa6\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport { copyToClipboard } from \"./helpers\";\n\nexport interface FlowbiteClipboardWithIconTheme {\n  base: string;\n  icon: {\n    defaultIcon: string;\n    successIcon: string;\n  };\n}\n\nexport interface ClipboardWithIconProps extends ComponentProps<\"button\"> {\n  valueToCopy: string;\n  icon?: FC<ComponentProps<\"svg\">>;\n  theme?: DeepPartial<FlowbiteClipboardWithIconTheme>;\n}\n\nexport const ClipboardWithIcon = forwardRef<HTMLButtonElement, ClipboardWithIconProps>(\n  ({ valueToCopy, icon: Icon = FaClipboardList, theme: customTheme = {}, className, ...rest }, ref) => {\n    const [isJustCopied, setIsJustCopied] = useState(false);\n\n    const theme = mergeDeep(getTheme().clipboard.withIcon, customTheme);\n\n    return (\n      <button\n        className={twMerge(theme.base, className)}\n        onClick={() => copyToClipboard(valueToCopy, setIsJustCopied)}\n        {...rest}\n        ref={ref}\n      >\n        {isJustCopied ? (\n          <FaCheck aria-hidden className={theme.icon.successIcon} />\n        ) : (\n          <Icon aria-hidden className={theme.icon.defaultIcon} />\n        )}\n      </button>\n    );\n  },\n);\n"],"mappings":";;;;;;;;;AAUA,MAAKA,iBAAiB,GAAEC,UAAO,CAC/B;EAAIC,WAAO;EAAAC,IAAA,EAAYC,IAAE,GAAAC,eAAmB;EAAAC,KAAS,EAAAC,WAAO;EAAAC,SAAA;EAAA,GAAAC;AAAA,GAAAC,GAAA;EACxD,MAAM,CAAAC,YAAQ,EAAAC,eAAqB,IAAAC,QAAU,MAAQ,CAAE;EACvD,MAAAP,KAAA,GAAAQ,SAAuB,CAAAC,QAAG,GAAAC,SAAA,CAAAC,QAAA,EAAAV,WAAA;EAC9B,OAAM,eAAQW,GAAA,CACR,UACN;IACQV,SAAS,EAAAW,OAAM,CAAAb,KAAA,CAAAc,IAAA,EAAgBZ,SAAA;IAC/Ba,OAAO,EAAAA,CAAA,KAAAC,eAAA,CAAApB,WAAA,EAAAU,eAAA;IACP,GAAGH,IAAA;IACHC,GAAA;IACDa,QAAA,EAAAZ,YAAA,kBAAAO,GAAA,CAAAM,OAAA;MAAA;MAAAhB,SAAA,EAAAF,KAAA,CAAAH,IAAA,CAAAsB;IAAA,oBAAAP,GAAA,CAAAd,IAAA;MAAA;MAAAI,SAAA,EAAAF,KAAA,CAAAH,IAAA,CAAAuB;IAAA;EACD,CACH;AACH,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}