{"ast":null,"code":"import { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep.mjs';\nimport { getTheme } from '../../theme-store/index.mjs';\nimport { HRIcon } from './HRIcon.mjs';\nimport { HRSquare } from './HRSquare.mjs';\nimport { HRText } from './HRText.mjs';\nimport { HRTrimmed } from './HRTrimmed.mjs';\nconst HRComponent = forwardRef(({\n  theme: customTheme = {},\n  className,\n  ...props\n}, ref) => {\n  const theme = mergeDeep(getTheme().hr.root, customTheme);\n  return /* @__PURE__ */jsx(\"hr\", {\n    className: twMerge(theme.base, className),\n    role: \"separator\",\n    \"data-testid\": \"flowbite-hr\",\n    ref,\n    ...props\n  });\n});\nHRComponent.displayName = \"HR\";\nHRTrimmed.displayName = \"HR.Trimmed\";\nHRIcon.displayName = \"HR.Icon\";\nHRText.displayName = \"HR.Text\";\nHRSquare.displayName = \"HR.Square\";\nconst HR = Object.assign(HRComponent, {\n  Trimmed: HRTrimmed,\n  Icon: HRIcon,\n  Text: HRText,\n  Square: HRSquare\n});\nexport { HR };","map":{"version":3,"names":["HRComponent","forwardRef","theme","customTheme","className","props","ref","mergeDeep","getTheme","hr","root","jsx","twMerge","base","role","displayName","HRTrimmed","HRIcon","HRText","HRSquare","HR","Object","assign","Trimmed","Icon","Text","Square"],"sources":["/Users/nayalabina/project-cbt/node_modules/flowbite-react/src/components/HR/HR.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport type { ComponentProps } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport { HRIcon } from \"./HRIcon\";\nimport type { FlowbiteHRIconTheme } from \"./HRIcon\";\nimport type { FlowbiteHRSquareTheme } from \"./HRSquare\";\nimport { HRSquare } from \"./HRSquare\";\nimport { HRText } from \"./HRText\";\nimport type { FlowbiteHRTextTheme } from \"./HRText\";\nimport { HRTrimmed } from \"./HRTrimmed\";\nimport type { FlowbiteHRTrimmedTheme } from \"./HRTrimmed\";\n\nexport interface FlowbiteHRTheme {\n  root: {\n    base: string;\n  };\n  trimmed: FlowbiteHRTrimmedTheme;\n  icon: FlowbiteHRIconTheme;\n  text: FlowbiteHRTextTheme;\n  square: FlowbiteHRSquareTheme;\n}\n\nexport interface HRProps extends Omit<ComponentProps<\"hr\">, \"ref\"> {\n  theme?: DeepPartial<FlowbiteHRTheme>;\n}\n\nconst HRComponent = forwardRef<HTMLHRElement, HRProps>(({ theme: customTheme = {}, className, ...props }, ref) => {\n  const theme = mergeDeep(getTheme().hr.root, customTheme);\n\n  return (\n    <hr className={twMerge(theme.base, className)} role=\"separator\" data-testid=\"flowbite-hr\" ref={ref} {...props} />\n  );\n});\n\nHRComponent.displayName = \"HR\";\nHRTrimmed.displayName = \"HR.Trimmed\";\nHRIcon.displayName = \"HR.Icon\";\nHRText.displayName = \"HR.Text\";\nHRSquare.displayName = \"HR.Square\";\n\nexport const HR = Object.assign(HRComponent, {\n  Trimmed: HRTrimmed,\n  Icon: HRIcon,\n  Text: HRText,\n  Square: HRSquare,\n});\n"],"mappings":";;;;;;;;;AAUA,MAAMA,WAAW,GAAGC,UAAU,CAAC,CAAC;EAAEC,KAAK,EAAEC,WAAW,GAAG,EAAE;EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAE,EAAEC,GAAG,KAAK;EACxF,MAAMJ,KAAK,GAAGK,SAAS,CAACC,QAAQ,EAAE,CAACC,EAAE,CAACC,IAAI,EAAEP,WAAW,CAAC;EACxD,sBAAuBQ,GAAG,CAAC,IAAI,EAAE;IAAEP,SAAS,EAAEQ,OAAO,CAACV,KAAK,CAACW,IAAI,EAAET,SAAS,CAAC;IAAEU,IAAI,EAAE,WAAW;IAAE,aAAa,EAAE,aAAa;IAAER,GAAG;IAAE,GAAGD;EAAK,CAAE,CAAC;AACjJ,CAAC,CAAC;AACFL,WAAW,CAACe,WAAW,GAAG,IAAI;AAC9BC,SAAS,CAACD,WAAW,GAAG,YAAY;AACpCE,MAAM,CAACF,WAAW,GAAG,SAAS;AAC9BG,MAAM,CAACH,WAAW,GAAG,SAAS;AAC9BI,QAAQ,CAACJ,WAAW,GAAG,WAAW;AACtB,MAACK,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACtB,WAAW,EAAE;EAC3CuB,OAAO,EAAEP,SAAS;EAClBQ,IAAI,EAAEP,MAAM;EACZQ,IAAI,EAAEP,MAAM;EACZQ,MAAM,EAAEP;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}